<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description"
        content=" Discover NUSID, the generic user space to import in all your Node.JS apps. It includes everything from the templates to the database management." />
    <title>Reset your password</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

</head>

<body style="background-color:#2d2d2d;">
    <div class="container mt-4 pt-3 rounded" style="background-color: rgb(240, 239, 239);">
        <div class="col-sm-12">
            <h1>Reset your password</h1>
        </div>
        <form class="form-horizontal pt-2" id="change-password-form">
            <div class="form-group" id="password-group">
                <label class="col-sm-2 control-label">Password</label>
                <div class="col-sm-12">
                    <div class="input-group">
                        <span class="input-group-prepend"><span class="input-group-text"><i
                                    class="fa fa-lock"></i></span></span>
                        <input class="form-control" type="password" name="password"
                            oninput="validatePassword(this.value)" />
                    </div>
                    <p class="help-block invalid-feedback" style="display: none;">
                    </p>
                </div>
            </div>

            <div class="form-group" id="confirm-password-group">
                <label class="col-sm-2 control-label">Confirm Password</label>
                <div class="col-sm-12">
                    <div class="input-group">
                        <span class="input-group-prepend"><span class="input-group-text"><i
                                    class="fa fa-lock"></i></span></span>
                        <input class="form-control" type="password" name="confirm_password"
                            oninput="validateConfirmPassword(this.value)" />
                    </div>
                    <p class="help-block invalid-feedback" style="display: none;">
                    </p>
                </div>
            </div>
            <div class="form-group pb-4 pt-2">
                <div class="col-sm-offset-2 col-sm-12">
                    <!--<button type="submit" class="btn btn-action" ng-model="submit" ng-disabled="disableSubmit()">Create My Account</button>-->
                    <button type="submit" class="btn btn-primary" onsubmit="submit(this)">Confirm</button>
                </div>
            </div>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
        integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
        integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
        crossorigin="anonymous"></script>
    <script>

        var HAS_ERROR_CSSCLASS = "is-invalid";
        var HAS_SUCCESS_CSSCLASS = "is-valid";
        const PASSWORD_LENGTH = 8;
        var password = "";
        var confirmPassword = "";

        function validatePassword(value) {
            password = value;
            var analysis = analysePassword(password);
            updateInputGroupDisplay("password-group", analysis);
            if (confirmPassword !== "") validateConfirmPassword(confirmPassword);
            return analysis;
        }

        function updateInputGroupDisplay(idGroup, analyse) {
            var group = document.getElementById(idGroup);
            var input = group.getElementsByTagName("input")[0];
            var helper = group.getElementsByClassName("invalid-feedback")[0];
            if (analyse.isValid) {
                input.classList.remove(HAS_ERROR_CSSCLASS);
                input.classList.add(HAS_SUCCESS_CSSCLASS);
                helper.style.display = "none";
                helper.innerHTML = "";
            } else {
                input.classList.remove(HAS_SUCCESS_CSSCLASS);
                input.classList.add(HAS_ERROR_CSSCLASS);
                helper.style.display = "block";
                helper.innerHTML = analyse.notifications[0].message;
            }
        }

        function validateConfirmPassword(value) {
            confirmPassword = value
            var analysis = analyseConfirmPassword(confirmPassword);
            updateInputGroupDisplay("confirm-password-group", analysis);
            return analysis;
        }

        function analysePassword(password, confirmPassword) {
            var notifications = [];
            var isValid = true;
            if (!password) {
                isValid = false;
                notifications.push({ type: 'error', message: "No password provided" });
                return { isValid, notifications };
            }

            if (password.length < PASSWORD_LENGTH) {
                isValid = false;
                notifications.push({ type: 'error', message: "The password must contains more than " + PASSWORD_LENGTH + " characters!" });
            }
            return { isValid: isValid, notifications: notifications };
        };

        function analyseConfirmPassword(confirmPassword) {
            var notifications = [];
            var isValid = true;
            if (!confirmPassword) {
                isValid = false;
                notifications.push({ type: 'error', message: "No confirmation password provided" });
                return { isValid, notifications };
            }
            if (!(confirmPassword === password)) {
                isValid = false;
                notifications.push({ type: 'error', message: "The passwords don't match!" });

            }
            return { isValid: isValid, notifications: notifications };
        };

        function submit(form) {
            if (validatePassword(password).isValid && validateConfirmPassword(confirmPassword).isValid) {
                var x = new XMLHttpRequest();
                x.open("patch", "/users");
                x.send("");
            }
        }

    </script>

</body>

</html>